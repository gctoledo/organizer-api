// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  first_name String
  last_name  String
  password   String
  created_at DateTime @default(now())

  Trip Trip[]

  @@map("users")
}

model Trip {
  id           String   @id @default(uuid())
  destination  String
  starts_at    DateTime
  ends_at      DateTime
  is_confirmed Boolean  @default(false)
  created_at   DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  Link        Link[]
  Activity    Activity[]
  Participant Participant[]

  @@map("trips")
}

model Link {
  id         String   @id @default(uuid())
  title      String
  url        String
  created_at DateTime @default(now())

  trip   Trip   @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId String

  @@map("links")
}

model Activity {
  id        String   @id @default(uuid())
  title     String
  occurs_at DateTime

  trip   Trip   @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId String

  @@map("activities")
}

model Participant {
  id           String   @id @default(uuid())
  email        String   @unique
  first_name   String?
  is_confirmed Boolean  @default(false)
  owner        Boolean  @default(false)
  created_at   DateTime @default(now())

  trip   Trip   @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId String

  @@map("participants")
}
